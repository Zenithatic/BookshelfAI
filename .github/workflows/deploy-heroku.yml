name: Build Application

on:
    push:
        branches:
            - 'main'            # Ensure this only triggers on the 'main' branch

    pull_request:
        branches:
            - 'main'            # Ensure the workflow triggers on pull requests targeting the 'main' branch

jobs: 
    test:
        runs-on: ubuntu-latest

        services:
         selenium:
          image: selenium/standalone-chrome
          ports:
            - 4444:4444

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Copy environment variables from repo secrets to .env for backend
              run: | 
                echo "DB_URL=${{ secrets.DB_URL }}" >> ./backend/.env
                echo "GMAIL_USER=${{ secrets.GMAIL_USER }}" >> ./backend/.env
                echo "GMAIL_PASS=${{ secrets.GMAIL_PASS }}" >> ./backend/.env
                echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> ./backend/.env
                echo "GEMINI_API_KEY1=${{ secrets.GEMINI_API_KEY1 }}" >> ./backend/.env
                echo "GEMINI_API_KEY2=${{ secrets.GEMINI_API_KEY2 }}" >> ./backend/.env
                echo "GEMINI_API_KEY3=${{ secrets.GEMINI_API_KEY3 }}" >> ./backend/.env
                echo "GEMINI_API_KEY4=${{ secrets.GEMINI_API_KEY4 }}" >> ./backend/.env
            
            - name: Build the frontend docker image
              run: docker build -t ${{ secrets.DOCKER_USER }}/bookshelfai-frontend:latest ./frontend
            
            - name: Build the backend docker image
              run: docker build -t ${{ secrets.DOCKER_USER }}/bookshelfai-backend:latest ./backend

            - name: Run the frontend docker image for tests
              run: docker run -d --name baf -p 80:80 ${{ secrets.DOCKER_USER }}/bookshelfai-frontend:latest

            - name: Run the backend docker image for tests
              run: docker run -d --name bab -p 3000:3000 ${{ secrets.DOCKER_USER }}/bookshelfai-backend:latest

            - name: Setup python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'
            
            - name: Install dependencies
              run: pip install pytest selenium
            
            - name: Run tests
              run: python -m "pytest" ./frontend/python/tests

    deploy-frontend:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Replace backend url in env.js for frontend
              run: sed -i 's#http://localhost:3000#https://bookshelfai-backend-854a90edf2ca.herokuapp.com/#g' ./frontend/js/env.js
            
            - name: Replace port in nginx to heroku port
              run: sed -i 's#80#${PORT}#g' ./frontend/nginx.conf
            
            - name: Deploy to Heroku
              uses: akhileshns/heroku-deploy@v3.13.15
              with: 
                heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
                heroku_app_name: "bookshelfai-frontend"
                heroku_email: ${{ secrets.HEROKU_EMAIL }}
                justlogin: true
            
            - name: Login to Heroku registry
              run: heroku container:login
            
            - name: Build docker image
              run: docker build -t registry.heroku.com/bookshelfai-frontend/web ./frontend
            
            - name: Push docker image
              run: docker push registry.heroku.com/bookshelfai-frontend/web

            - name: Release the image
              run: heroku container:release web --app bookshelfai-frontend
            

    deploy-backend:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Copy environment variables from repo secrets to .env for backend
              run: | 
                echo "DB_URL=${{ secrets.DB_URL }}" >> ./backend/.env
                echo "GMAIL_USER=${{ secrets.GMAIL_USER }}" >> ./backend/.env
                echo "GMAIL_PASS=${{ secrets.GMAIL_PASS }}" >> ./backend/.env
                echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> ./backend/.env
                echo "GEMINI_API_KEY1=${{ secrets.GEMINI_API_KEY1 }}" >> ./backend/.env
                echo "GEMINI_API_KEY2=${{ secrets.GEMINI_API_KEY2 }}" >> ./backend/.env
                echo "GEMINI_API_KEY3=${{ secrets.GEMINI_API_KEY3 }}" >> ./backend/.env
                echo "GEMINI_API_KEY4=${{ secrets.GEMINI_API_KEY4 }}" >> ./backend/.env
            
            - name: Login to Heroku
              uses: akhileshns/heroku-deploy@v3.13.15
              with: 
                heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
                heroku_app_name: "bookshelfai-backend"
                heroku_email: ${{ secrets.HEROKU_EMAIL }}
                justlogin: true
            
            - name: Login to Heroku registry
              run: heroku container:login
            
            - name: Build docker image
              run: docker build -t registry.heroku.com/bookshelfai-backend/web ./backend
            
            - name: Push docker image
              run: docker push registry.heroku.com/bookshelfai-backend/web

            - name: Release the image
              run: heroku container:release web --app bookshelfai-backend

            





